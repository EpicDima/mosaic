// Klib ABI Dump
// Targets: [linuxArm64, linuxX64, macosArm64, macosX64, mingwX64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <com.jakewharton.mosaic:mosaic-terminal>
sealed interface com.jakewharton.mosaic.terminal.event/Event // com.jakewharton.mosaic.terminal.event/Event|null[0]

final class com.jakewharton.mosaic.terminal.event/BracketedPasteEvent : com.jakewharton.mosaic.terminal.event/Event { // com.jakewharton.mosaic.terminal.event/BracketedPasteEvent|null[0]
    constructor <init>(kotlin/Boolean) // com.jakewharton.mosaic.terminal.event/BracketedPasteEvent.<init>|<init>(kotlin.Boolean){}[0]

    final val start // com.jakewharton.mosaic.terminal.event/BracketedPasteEvent.start|{}start[0]
        final fun <get-start>(): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/BracketedPasteEvent.start.<get-start>|<get-start>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/BracketedPasteEvent.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.jakewharton.mosaic.terminal.event/BracketedPasteEvent.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // com.jakewharton.mosaic.terminal.event/BracketedPasteEvent.toString|toString(){}[0]
}

final class com.jakewharton.mosaic.terminal.event/DecModeReportEvent : com.jakewharton.mosaic.terminal.event/Event { // com.jakewharton.mosaic.terminal.event/DecModeReportEvent|null[0]
    constructor <init>(kotlin/Int, com.jakewharton.mosaic.terminal.event/DecModeReportEvent.Setting) // com.jakewharton.mosaic.terminal.event/DecModeReportEvent.<init>|<init>(kotlin.Int;com.jakewharton.mosaic.terminal.event.DecModeReportEvent.Setting){}[0]

    final val mode // com.jakewharton.mosaic.terminal.event/DecModeReportEvent.mode|{}mode[0]
        final fun <get-mode>(): kotlin/Int // com.jakewharton.mosaic.terminal.event/DecModeReportEvent.mode.<get-mode>|<get-mode>(){}[0]
    final val setting // com.jakewharton.mosaic.terminal.event/DecModeReportEvent.setting|{}setting[0]
        final fun <get-setting>(): com.jakewharton.mosaic.terminal.event/DecModeReportEvent.Setting // com.jakewharton.mosaic.terminal.event/DecModeReportEvent.setting.<get-setting>|<get-setting>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/DecModeReportEvent.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.jakewharton.mosaic.terminal.event/DecModeReportEvent.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // com.jakewharton.mosaic.terminal.event/DecModeReportEvent.toString|toString(){}[0]

    final enum class Setting : kotlin/Enum<com.jakewharton.mosaic.terminal.event/DecModeReportEvent.Setting> { // com.jakewharton.mosaic.terminal.event/DecModeReportEvent.Setting|null[0]
        enum entry NotRecognized // com.jakewharton.mosaic.terminal.event/DecModeReportEvent.Setting.NotRecognized|null[0]
        enum entry PermanentlyReset // com.jakewharton.mosaic.terminal.event/DecModeReportEvent.Setting.PermanentlyReset|null[0]
        enum entry PermanentlySet // com.jakewharton.mosaic.terminal.event/DecModeReportEvent.Setting.PermanentlySet|null[0]
        enum entry Reset // com.jakewharton.mosaic.terminal.event/DecModeReportEvent.Setting.Reset|null[0]
        enum entry Set // com.jakewharton.mosaic.terminal.event/DecModeReportEvent.Setting.Set|null[0]

        final val entries // com.jakewharton.mosaic.terminal.event/DecModeReportEvent.Setting.entries|#static{}entries[0]
            final fun <get-entries>(): kotlin.enums/EnumEntries<com.jakewharton.mosaic.terminal.event/DecModeReportEvent.Setting> // com.jakewharton.mosaic.terminal.event/DecModeReportEvent.Setting.entries.<get-entries>|<get-entries>#static(){}[0]

        final fun valueOf(kotlin/String): com.jakewharton.mosaic.terminal.event/DecModeReportEvent.Setting // com.jakewharton.mosaic.terminal.event/DecModeReportEvent.Setting.valueOf|valueOf#static(kotlin.String){}[0]
        final fun values(): kotlin/Array<com.jakewharton.mosaic.terminal.event/DecModeReportEvent.Setting> // com.jakewharton.mosaic.terminal.event/DecModeReportEvent.Setting.values|values#static(){}[0]
    }
}

final class com.jakewharton.mosaic.terminal.event/DeviceStatusReportEvent : com.jakewharton.mosaic.terminal.event/Event { // com.jakewharton.mosaic.terminal.event/DeviceStatusReportEvent|null[0]
    constructor <init>(kotlin/String) // com.jakewharton.mosaic.terminal.event/DeviceStatusReportEvent.<init>|<init>(kotlin.String){}[0]

    final val data // com.jakewharton.mosaic.terminal.event/DeviceStatusReportEvent.data|{}data[0]
        final fun <get-data>(): kotlin/String // com.jakewharton.mosaic.terminal.event/DeviceStatusReportEvent.data.<get-data>|<get-data>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/DeviceStatusReportEvent.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.jakewharton.mosaic.terminal.event/DeviceStatusReportEvent.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // com.jakewharton.mosaic.terminal.event/DeviceStatusReportEvent.toString|toString(){}[0]
}

final class com.jakewharton.mosaic.terminal.event/FocusEvent : com.jakewharton.mosaic.terminal.event/Event { // com.jakewharton.mosaic.terminal.event/FocusEvent|null[0]
    constructor <init>(kotlin/Boolean) // com.jakewharton.mosaic.terminal.event/FocusEvent.<init>|<init>(kotlin.Boolean){}[0]

    final val focused // com.jakewharton.mosaic.terminal.event/FocusEvent.focused|{}focused[0]
        final fun <get-focused>(): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/FocusEvent.focused.<get-focused>|<get-focused>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/FocusEvent.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.jakewharton.mosaic.terminal.event/FocusEvent.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // com.jakewharton.mosaic.terminal.event/FocusEvent.toString|toString(){}[0]
}

final class com.jakewharton.mosaic.terminal.event/KittyKeyboardQueryEvent : com.jakewharton.mosaic.terminal.event/Event { // com.jakewharton.mosaic.terminal.event/KittyKeyboardQueryEvent|null[0]
    constructor <init>(kotlin/Int) // com.jakewharton.mosaic.terminal.event/KittyKeyboardQueryEvent.<init>|<init>(kotlin.Int){}[0]

    final val disambiguateEscapeCodes // com.jakewharton.mosaic.terminal.event/KittyKeyboardQueryEvent.disambiguateEscapeCodes|{}disambiguateEscapeCodes[0]
        final fun <get-disambiguateEscapeCodes>(): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/KittyKeyboardQueryEvent.disambiguateEscapeCodes.<get-disambiguateEscapeCodes>|<get-disambiguateEscapeCodes>(){}[0]
    final val flags // com.jakewharton.mosaic.terminal.event/KittyKeyboardQueryEvent.flags|{}flags[0]
        final fun <get-flags>(): kotlin/Int // com.jakewharton.mosaic.terminal.event/KittyKeyboardQueryEvent.flags.<get-flags>|<get-flags>(){}[0]
    final val reportAllKeysAsEscapeCodes // com.jakewharton.mosaic.terminal.event/KittyKeyboardQueryEvent.reportAllKeysAsEscapeCodes|{}reportAllKeysAsEscapeCodes[0]
        final fun <get-reportAllKeysAsEscapeCodes>(): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/KittyKeyboardQueryEvent.reportAllKeysAsEscapeCodes.<get-reportAllKeysAsEscapeCodes>|<get-reportAllKeysAsEscapeCodes>(){}[0]
    final val reportAlternateKeys // com.jakewharton.mosaic.terminal.event/KittyKeyboardQueryEvent.reportAlternateKeys|{}reportAlternateKeys[0]
        final fun <get-reportAlternateKeys>(): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/KittyKeyboardQueryEvent.reportAlternateKeys.<get-reportAlternateKeys>|<get-reportAlternateKeys>(){}[0]
    final val reportAssociatedText // com.jakewharton.mosaic.terminal.event/KittyKeyboardQueryEvent.reportAssociatedText|{}reportAssociatedText[0]
        final fun <get-reportAssociatedText>(): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/KittyKeyboardQueryEvent.reportAssociatedText.<get-reportAssociatedText>|<get-reportAssociatedText>(){}[0]
    final val reportEventTypes // com.jakewharton.mosaic.terminal.event/KittyKeyboardQueryEvent.reportEventTypes|{}reportEventTypes[0]
        final fun <get-reportEventTypes>(): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/KittyKeyboardQueryEvent.reportEventTypes.<get-reportEventTypes>|<get-reportEventTypes>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/KittyKeyboardQueryEvent.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.jakewharton.mosaic.terminal.event/KittyKeyboardQueryEvent.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // com.jakewharton.mosaic.terminal.event/KittyKeyboardQueryEvent.toString|toString(){}[0]
}

final class com.jakewharton.mosaic.terminal.event/PrimaryDeviceAttributesEvent : com.jakewharton.mosaic.terminal.event/Event { // com.jakewharton.mosaic.terminal.event/PrimaryDeviceAttributesEvent|null[0]
    constructor <init>(kotlin/String) // com.jakewharton.mosaic.terminal.event/PrimaryDeviceAttributesEvent.<init>|<init>(kotlin.String){}[0]

    final val data // com.jakewharton.mosaic.terminal.event/PrimaryDeviceAttributesEvent.data|{}data[0]
        final fun <get-data>(): kotlin/String // com.jakewharton.mosaic.terminal.event/PrimaryDeviceAttributesEvent.data.<get-data>|<get-data>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/PrimaryDeviceAttributesEvent.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.jakewharton.mosaic.terminal.event/PrimaryDeviceAttributesEvent.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // com.jakewharton.mosaic.terminal.event/PrimaryDeviceAttributesEvent.toString|toString(){}[0]
}

final class com.jakewharton.mosaic.terminal.event/SystemThemeEvent : com.jakewharton.mosaic.terminal.event/Event { // com.jakewharton.mosaic.terminal.event/SystemThemeEvent|null[0]
    constructor <init>(kotlin/Boolean) // com.jakewharton.mosaic.terminal.event/SystemThemeEvent.<init>|<init>(kotlin.Boolean){}[0]

    final val isDark // com.jakewharton.mosaic.terminal.event/SystemThemeEvent.isDark|{}isDark[0]
        final fun <get-isDark>(): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/SystemThemeEvent.isDark.<get-isDark>|<get-isDark>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/SystemThemeEvent.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.jakewharton.mosaic.terminal.event/SystemThemeEvent.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // com.jakewharton.mosaic.terminal.event/SystemThemeEvent.toString|toString(){}[0]
}

final class com.jakewharton.mosaic.terminal.event/TerminalVersionEvent : com.jakewharton.mosaic.terminal.event/Event { // com.jakewharton.mosaic.terminal.event/TerminalVersionEvent|null[0]
    constructor <init>(kotlin/String) // com.jakewharton.mosaic.terminal.event/TerminalVersionEvent.<init>|<init>(kotlin.String){}[0]

    final val data // com.jakewharton.mosaic.terminal.event/TerminalVersionEvent.data|{}data[0]
        final fun <get-data>(): kotlin/String // com.jakewharton.mosaic.terminal.event/TerminalVersionEvent.data.<get-data>|<get-data>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/TerminalVersionEvent.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.jakewharton.mosaic.terminal.event/TerminalVersionEvent.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // com.jakewharton.mosaic.terminal.event/TerminalVersionEvent.toString|toString(){}[0]
}

final class com.jakewharton.mosaic.terminal.event/UnknownEvent : com.jakewharton.mosaic.terminal.event/Event { // com.jakewharton.mosaic.terminal.event/UnknownEvent|null[0]
    constructor <init>(kotlin/ByteArray) // com.jakewharton.mosaic.terminal.event/UnknownEvent.<init>|<init>(kotlin.ByteArray){}[0]

    final val bytes // com.jakewharton.mosaic.terminal.event/UnknownEvent.bytes|{}bytes[0]
        final fun <get-bytes>(): kotlin/ByteArray // com.jakewharton.mosaic.terminal.event/UnknownEvent.bytes.<get-bytes>|<get-bytes>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // com.jakewharton.mosaic.terminal.event/UnknownEvent.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.jakewharton.mosaic.terminal.event/UnknownEvent.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // com.jakewharton.mosaic.terminal.event/UnknownEvent.toString|toString(){}[0]
}

final class com.jakewharton.mosaic.terminal/StdinReader : kotlin/AutoCloseable { // com.jakewharton.mosaic.terminal/StdinReader|null[0]
    final fun close() // com.jakewharton.mosaic.terminal/StdinReader.close|close(){}[0]
    final fun interrupt() // com.jakewharton.mosaic.terminal/StdinReader.interrupt|interrupt(){}[0]
    final fun read(kotlin/ByteArray, kotlin/Int, kotlin/Int): kotlin/Int // com.jakewharton.mosaic.terminal/StdinReader.read|read(kotlin.ByteArray;kotlin.Int;kotlin.Int){}[0]
    final fun readWithTimeout(kotlin/ByteArray, kotlin/Int, kotlin/Int, kotlin/Int): kotlin/Int // com.jakewharton.mosaic.terminal/StdinReader.readWithTimeout|readWithTimeout(kotlin.ByteArray;kotlin.Int;kotlin.Int;kotlin.Int){}[0]
}

final class com.jakewharton.mosaic.terminal/TerminalParser { // com.jakewharton.mosaic.terminal/TerminalParser|null[0]
    constructor <init>(com.jakewharton.mosaic.terminal/StdinReader, kotlin/Boolean) // com.jakewharton.mosaic.terminal/TerminalParser.<init>|<init>(com.jakewharton.mosaic.terminal.StdinReader;kotlin.Boolean){}[0]

    final fun next(): com.jakewharton.mosaic.terminal.event/Event // com.jakewharton.mosaic.terminal/TerminalParser.next|next(){}[0]
}

final object com.jakewharton.mosaic.terminal/Tty { // com.jakewharton.mosaic.terminal/Tty|null[0]
    final fun enableRawMode(): kotlin/AutoCloseable // com.jakewharton.mosaic.terminal/Tty.enableRawMode|enableRawMode(){}[0]
    final fun stdinReader(): com.jakewharton.mosaic.terminal/StdinReader // com.jakewharton.mosaic.terminal/Tty.stdinReader|stdinReader(){}[0]
}
